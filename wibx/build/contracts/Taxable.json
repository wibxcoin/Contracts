{
  "contractName": "Taxable",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "taxRecipientAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTaxAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentTaxShift",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "shift",
          "type": "uint256"
        }
      ],
      "name": "changeTax",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610ac08339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101596009600161015f640100000000026401000000009004565b506103ea565b610176610277640100000000026401000000009004565b151561018157600080fd5b600081141561022a5760038211151515610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f596f752063616e2774207365742061207461782067726561746572207468616e81526020017f203325000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b6040805190810160405280838152602001610257836102ce64010000000002610492176401000000009004565b815250600260008201518160000155602082015181600101559050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008082101580156102e1575060028211155b151561037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f752063616e277420736574206d6f7265207468616e203220646563696d6181526020017f6c20706c6163657300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000606490506103a483600a0a826103ac6401000000000261065d179091906401000000009004565b915050919050565b6000808314156103bf57600090506103e4565b600082840290508284828115156103d257fe5b041415156103df57600080fd5b809150505b92915050565b6106c7806103f96000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f2af89a14610088578063174f0d4f146100b3578063715018a6146100de5780638da5cb5b146100f55780638f32d59b1461014c5780639036ed4d1461017b578063f2fde38b146101c0575b600080fd5b34801561009457600080fd5b5061009d610211565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b506100c861021e565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b506100f361022b565b005b34801561010157600080fd5b5061010a6102fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015857600080fd5b50610161610326565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b506101be6004803603604081101561019e57600080fd5b81019080803590602001909291908035906020019092919050505061037d565b005b3480156101cc57600080fd5b5061020f600480360360208110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610473565b005b6000600260000154905090565b6000600260010154905090565b610233610326565b151561023e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610385610326565b151561039057600080fd5b60008114156104395760038211151515610438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f596f752063616e2774207365742061207461782067726561746572207468616e81526020017f203325000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b604080519081016040528083815260200161045383610492565b815250600260008201518160000155602082015181600101559050505050565b61047b610326565b151561048657600080fd5b61048f81610563565b50565b60008082101580156104a5575060028211155b151561053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f752063616e277420736574206d6f7265207468616e203220646563696d6181526020017f6c20706c6163657300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006064905061055b83600a0a8261065d90919063ffffffff16565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561059f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808314156106705760009050610695565b6000828402905082848281151561068357fe5b0414151561069057600080fd5b809150505b9291505056fea165627a7a7230582034f3f890015332001f26cae5ba2f2cd6f2877e7f156cacc5efcaffcc11290ff40029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f2af89a14610088578063174f0d4f146100b3578063715018a6146100de5780638da5cb5b146100f55780638f32d59b1461014c5780639036ed4d1461017b578063f2fde38b146101c0575b600080fd5b34801561009457600080fd5b5061009d610211565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b506100c861021e565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b506100f361022b565b005b34801561010157600080fd5b5061010a6102fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015857600080fd5b50610161610326565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b506101be6004803603604081101561019e57600080fd5b81019080803590602001909291908035906020019092919050505061037d565b005b3480156101cc57600080fd5b5061020f600480360360208110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610473565b005b6000600260000154905090565b6000600260010154905090565b610233610326565b151561023e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610385610326565b151561039057600080fd5b60008114156104395760038211151515610438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f596f752063616e2774207365742061207461782067726561746572207468616e81526020017f203325000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b604080519081016040528083815260200161045383610492565b815250600260008201518160000155602082015181600101559050505050565b61047b610326565b151561048657600080fd5b61048f81610563565b50565b60008082101580156104a5575060028211155b151561053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f752063616e277420736574206d6f7265207468616e203220646563696d6181526020017f6c20706c6163657300000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006064905061055b83600a0a8261065d90919063ffffffff16565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561059f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808314156106705760009050610695565b6000828402905082848281151561068357fe5b0414151561069057600080fd5b809150505b9291505056fea165627a7a7230582034f3f890015332001f26cae5ba2f2cd6f2877e7f156cacc5efcaffcc11290ff40029",
  "sourceMap": "383:1808:3:-;;;591:185;8:9:-1;5:2;;;30:1;27;20:12;5:2;591:185:3;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;591:185:3;;;;;;;;;;;;;;;;524:10:11;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;670:16:3;650:17;;:36;;;;;;;;;;;;;;;;;;754:15;764:1;767;754:9;;;:15;;;:::i;:::-;591:185;383:1808;;1467:382;863:9:11;:7;;;:9;;;:::i;:::-;855:18;;;;;;;;1561:1:3;1552:5;:10;1548:108;;;1604:1;1594:6;:11;;1586:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:108;1682:160;;;;;;;;;1713:6;1682:160;;;;1798:34;1826:5;1798:27;;;;;:34;;;:::i;:::-;1682:160;;;1666:13;:176;;;;;;;;;;;;;;;;;;;1467:382;;:::o;979:90:11:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1245:245:2:-;1313:7;1353:1;1344:5;:10;;:24;;;;;1367:1;1358:5;:10;;1344:24;1336:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:13;1440:3;1424:19;;1461:22;1477:5;1471:2;:11;1461:5;:9;;;;;;:22;;;;;:::i;:::-;1454:29;;;1245:245;;;:::o;229:421:10:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o;383:1808:3:-;;;;;;;",
  "deployedSourceMap": "383:1808:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:106:3;;;;;;;;;;;;;;;;;;;;;;;1005:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:104:3;;;;;;;;;;;;;;;;;;;;;;;1347:137:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:11;;;;;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:11;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:382:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1467:382:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1467:382:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:11;;;;;;;;;;;;;;;;;;;;;;838:106:3;887:7;917:13;:20;;;910:27;;838:106;:::o;1005:104::-;1053:7;1083:13;:19;;;1076:26;;1005:104;:::o;1347:137:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1467:382:3:-;863:9:11;:7;:9::i;:::-;855:18;;;;;;;;1561:1:3;1552:5;:10;1548:108;;;1604:1;1594:6;:11;;1586:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:108;1682:160;;;;;;;;;1713:6;1682:160;;;;1798:34;1826:5;1798:27;:34::i;:::-;1682:160;;;1666:13;:176;;;;;;;;;;;;;;;;;;;1467:382;;:::o;1655:107:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1245:245:2:-;1313:7;1353:1;1344:5;:10;;:24;;;;;1367:1;1358:5;:10;;1344:24;1336:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:13;1440:3;1424:19;;1461:22;1477:5;1471:2;:11;1461:5;:9;;:22;;;;:::i;:::-;1454:29;;;1245:245;;;:::o;1906:183:11:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;229:421:10:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o",
  "source": "/**\n * This smart contract code is Copyright 2018 WiBX. For more information see https://wibx.io\n *\n * Licensed under the Apache License, version 2.0: https://github.com/wibxcoin/Contracts/LICENSE.txt\n */\n\npragma solidity 0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./TaxLib.sol\";\n\n/**\n * @title Taxable token\n *\n * @dev Manages dynamic taxes\n */\ncontract Taxable is Ownable\n{\n    /**\n     * Tax recipient.\n     */\n    address internal _taxRecipientAddr;\n\n    /**\n     * Modifiable tax container.\n     */\n    TaxLib.DynamicTax private _taxContainer;\n\n    constructor(address taxRecipientAddr) public\n    {\n        _taxRecipientAddr = taxRecipientAddr;\n\n        /**\n         * Tax: Starting at 0.9%\n         */\n        changeTax(9, 1);\n    }\n\n    /**\n     * @dev Get the current tax amount.\n     */\n    function currentTaxAmount() public view returns (uint256)\n    {\n        return _taxContainer.amount;\n    }\n\n    /**\n     * @dev Get the current tax shift.\n     */\n    function currentTaxShift() public view returns (uint256)\n    {\n        return _taxContainer.shift;\n    }\n\n    /**\n     * @dev Change the dynamic tax.\n     *\n     * Just the contract admin can change the taxes.\n     * The possible tax range is 0% ~ 3% and cannot exceed it.\n     *\n     * Reference table:\n     * 3, 0 (3 / 100)   = 3%\n     * 3, 1 (3 / 1000)  = 0.3%\n     * 3, 2 (3 / 10000) = 0.03%\n     *\n     * @param amount The new tax amount chosen\n     */\n    function changeTax(uint256 amount, uint256 shift) public onlyOwner\n    {\n        if (shift == 0)\n        {\n            require(amount <= 3, \"You can't set a tax greater than 3%\");\n        }\n\n        _taxContainer = TaxLib.DynamicTax(\n            amount,\n\n            // The maximum decimal places value is checked here\n            TaxLib.normalizeShiftAmount(shift)\n        );\n    }\n\n    /**\n     * @dev Apply the tax based on the dynamic tax container\n     *\n     * @param value The value of transaction\n     */\n    function _applyTax(uint256 value) internal view returns (uint256)\n    {\n        return TaxLib.applyTax(\n            _taxContainer.amount,\n            _taxContainer.shift,\n            value\n        );\n    }\n}",
  "sourcePath": "/home/gabriel/Documents/gitViews/wibxcoin/Contracts/wibx/contracts/Taxable.sol",
  "ast": {
    "absolutePath": "/home/gabriel/Documents/gitViews/wibxcoin/Contracts/wibx/contracts/Taxable.sol",
    "exportedSymbols": {
      "Taxable": [
        326
      ]
    },
    "id": 327,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 234,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "206:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 235,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 1545,
        "src": "230:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gabriel/Documents/gitViews/wibxcoin/Contracts/wibx/contracts/TaxLib.sol",
        "file": "./TaxLib.sol",
        "id": 236,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 233,
        "src": "294:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1544,
              "src": "403:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1544",
                "typeString": "contract Ownable"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:3"
          }
        ],
        "contractDependencies": [
          1544
        ],
        "contractKind": "contract",
        "documentation": "@title Taxable token\n * @dev Manages dynamic taxes",
        "fullyImplemented": true,
        "id": 326,
        "linearizedBaseContracts": [
          326,
          1544
        ],
        "name": "Taxable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 240,
            "name": "_taxRecipientAddr",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "455:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 239,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 242,
            "name": "_taxContainer",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "545:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
              "typeString": "struct TaxLib.DynamicTax"
            },
            "typeName": {
              "contractScope": null,
              "id": 241,
              "name": "TaxLib.DynamicTax",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 162,
              "src": "545:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DynamicTax_$162_storage_ptr",
                "typeString": "struct TaxLib.DynamicTax"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "640:136:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "_taxRecipientAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "650:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "taxRecipientAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "670:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "650:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "650:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "767:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 251,
                      "name": "changeTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "754:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "754:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "754:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 257,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "taxRecipientAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "603:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:26:3"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:3"
            },
            "scope": 326,
            "src": "591:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "900:44:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "917:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 159,
                    "src": "917:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "910:27:3"
                }
              ]
            },
            "documentation": "@dev Get the current tax amount.",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentTaxAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:2:3"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "887:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:9:3"
            },
            "scope": 326,
            "src": "838:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1066:43:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 271,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "1083:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "shift",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 161,
                    "src": "1083:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 270,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "1076:26:3"
                }
              ]
            },
            "documentation": "@dev Get the current tax shift.",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentTaxShift",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:2:3"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1053:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1052:9:3"
            },
            "scope": 326,
            "src": "1005:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "1538:311:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "shift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1552:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1561:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1552:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "1548:108:3",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "1572:84:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "1594:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "33",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1604:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "1594:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "596f752063616e2774207365742061207461782067726561746572207468616e203325",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1607:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb58e8c83c264ee4cd0c265f4abf39ff46e4d03129fbf936ca53c91c2fac3447",
                                "typeString": "literal_string \"You can't set a tax greater than 3%\""
                              },
                              "value": "You can't set a tax greater than 3%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eb58e8c83c264ee4cd0c265f4abf39ff46e4d03129fbf936ca53c91c2fac3447",
                                "typeString": "literal_string \"You can't set a tax greater than 3%\""
                              }
                            ],
                            "id": 287,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2223,
                              2224
                            ],
                            "referencedDeclaration": 2224,
                            "src": "1586:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:59:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "1586:59:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "1666:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 299,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "1713:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 302,
                              "name": "shift",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "1826:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "TaxLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1798:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                                "typeString": "type(library TaxLib)"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "normalizeShiftAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 216,
                            "src": "1798:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1798:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 297,
                          "name": "TaxLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1682:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                            "typeString": "type(library TaxLib)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "DynamicTax",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 162,
                        "src": "1682:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DynamicTax_$162_storage_ptr_$",
                          "typeString": "type(struct TaxLib.DynamicTax storage pointer)"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1682:160:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_memory",
                        "typeString": "struct TaxLib.DynamicTax memory"
                      }
                    },
                    "src": "1666:176:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                      "typeString": "struct TaxLib.DynamicTax storage ref"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:176:3"
                }
              ]
            },
            "documentation": "@dev Change the dynamic tax.\n     * Just the contract admin can change the taxes.\nThe possible tax range is 0% ~ 3% and cannot exceed it.\n     * Reference table:\n3, 0 (3 / 100)   = 3%\n3, 1 (3 / 1000)  = 0.3%\n3, 2 (3 / 10000) = 0.03%\n     * @param amount The new tax amount chosen",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 282,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 281,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1478,
                  "src": "1524:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1524:9:3"
              }
            ],
            "name": "changeTax",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "1486:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "shift",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "1502:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1485:31:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:3"
            },
            "scope": 326,
            "src": "1467:382:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "2054:135:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 317,
                          "name": "_taxContainer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "2100:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                            "typeString": "struct TaxLib.DynamicTax storage ref"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 159,
                        "src": "2100:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "_taxContainer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "2134:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                            "typeString": "struct TaxLib.DynamicTax storage ref"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "shift",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "2134:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 321,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "2167:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "TaxLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2071:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                          "typeString": "type(library TaxLib)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "applyTax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "2071:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 314,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "2064:118:3"
                }
              ]
            },
            "documentation": "@dev Apply the tax based on the dynamic tax container\n     * @param value The value of transaction",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_applyTax",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2003:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2002:15:3"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2041:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2040:9:3"
            },
            "scope": 326,
            "src": "1984:205:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 327,
        "src": "383:1808:3"
      }
    ],
    "src": "206:1985:3"
  },
  "legacyAST": {
    "absolutePath": "/home/gabriel/Documents/gitViews/wibxcoin/Contracts/wibx/contracts/Taxable.sol",
    "exportedSymbols": {
      "Taxable": [
        326
      ]
    },
    "id": 327,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 234,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "206:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 235,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 1545,
        "src": "230:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gabriel/Documents/gitViews/wibxcoin/Contracts/wibx/contracts/TaxLib.sol",
        "file": "./TaxLib.sol",
        "id": 236,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 233,
        "src": "294:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1544,
              "src": "403:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1544",
                "typeString": "contract Ownable"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:3"
          }
        ],
        "contractDependencies": [
          1544
        ],
        "contractKind": "contract",
        "documentation": "@title Taxable token\n * @dev Manages dynamic taxes",
        "fullyImplemented": true,
        "id": 326,
        "linearizedBaseContracts": [
          326,
          1544
        ],
        "name": "Taxable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 240,
            "name": "_taxRecipientAddr",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "455:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 239,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 242,
            "name": "_taxContainer",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "545:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
              "typeString": "struct TaxLib.DynamicTax"
            },
            "typeName": {
              "contractScope": null,
              "id": 241,
              "name": "TaxLib.DynamicTax",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 162,
              "src": "545:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DynamicTax_$162_storage_ptr",
                "typeString": "struct TaxLib.DynamicTax"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "640:136:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "_taxRecipientAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "650:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "taxRecipientAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "670:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "650:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "650:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "767:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 251,
                      "name": "changeTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "754:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "754:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "754:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 257,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "taxRecipientAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "603:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:26:3"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:3"
            },
            "scope": 326,
            "src": "591:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "900:44:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "917:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 159,
                    "src": "917:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "910:27:3"
                }
              ]
            },
            "documentation": "@dev Get the current tax amount.",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentTaxAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:2:3"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "887:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:9:3"
            },
            "scope": 326,
            "src": "838:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1066:43:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 271,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "1083:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "shift",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 161,
                    "src": "1083:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 270,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "1076:26:3"
                }
              ]
            },
            "documentation": "@dev Get the current tax shift.",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentTaxShift",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:2:3"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1053:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1052:9:3"
            },
            "scope": 326,
            "src": "1005:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "1538:311:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "shift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1552:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1561:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1552:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "1548:108:3",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "1572:84:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "1594:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "33",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1604:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "1594:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "596f752063616e2774207365742061207461782067726561746572207468616e203325",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1607:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb58e8c83c264ee4cd0c265f4abf39ff46e4d03129fbf936ca53c91c2fac3447",
                                "typeString": "literal_string \"You can't set a tax greater than 3%\""
                              },
                              "value": "You can't set a tax greater than 3%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eb58e8c83c264ee4cd0c265f4abf39ff46e4d03129fbf936ca53c91c2fac3447",
                                "typeString": "literal_string \"You can't set a tax greater than 3%\""
                              }
                            ],
                            "id": 287,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2223,
                              2224
                            ],
                            "referencedDeclaration": 2224,
                            "src": "1586:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:59:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "1586:59:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "_taxContainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "1666:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                        "typeString": "struct TaxLib.DynamicTax storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 299,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "1713:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 302,
                              "name": "shift",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "1826:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "TaxLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1798:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                                "typeString": "type(library TaxLib)"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "normalizeShiftAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 216,
                            "src": "1798:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1798:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 297,
                          "name": "TaxLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1682:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                            "typeString": "type(library TaxLib)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "DynamicTax",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 162,
                        "src": "1682:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DynamicTax_$162_storage_ptr_$",
                          "typeString": "type(struct TaxLib.DynamicTax storage pointer)"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1682:160:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicTax_$162_memory",
                        "typeString": "struct TaxLib.DynamicTax memory"
                      }
                    },
                    "src": "1666:176:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                      "typeString": "struct TaxLib.DynamicTax storage ref"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:176:3"
                }
              ]
            },
            "documentation": "@dev Change the dynamic tax.\n     * Just the contract admin can change the taxes.\nThe possible tax range is 0% ~ 3% and cannot exceed it.\n     * Reference table:\n3, 0 (3 / 100)   = 3%\n3, 1 (3 / 1000)  = 0.3%\n3, 2 (3 / 10000) = 0.03%\n     * @param amount The new tax amount chosen",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 282,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 281,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1478,
                  "src": "1524:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1524:9:3"
              }
            ],
            "name": "changeTax",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "1486:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "shift",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "1502:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1485:31:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:3"
            },
            "scope": 326,
            "src": "1467:382:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "2054:135:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 317,
                          "name": "_taxContainer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "2100:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                            "typeString": "struct TaxLib.DynamicTax storage ref"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 159,
                        "src": "2100:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "_taxContainer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "2134:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicTax_$162_storage",
                            "typeString": "struct TaxLib.DynamicTax storage ref"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "shift",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "2134:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 321,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "2167:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "TaxLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2071:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TaxLib_$232_$",
                          "typeString": "type(library TaxLib)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "applyTax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "2071:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 314,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "2064:118:3"
                }
              ]
            },
            "documentation": "@dev Apply the tax based on the dynamic tax container\n     * @param value The value of transaction",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_applyTax",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2003:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2002:15:3"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2041:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2040:9:3"
            },
            "scope": 326,
            "src": "1984:205:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 327,
        "src": "383:1808:3"
      }
    ],
    "src": "206:1985:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-23T14:56:02.509Z",
  "devdoc": {
    "details": "Manages dynamic taxes",
    "methods": {
      "changeTax(uint256,uint256)": {
        "details": "Change the dynamic tax.     * Just the contract admin can change the taxes. The possible tax range is 0% ~ 3% and cannot exceed it.     * Reference table: 3, 0 (3 / 100)   = 3% 3, 1 (3 / 1000)  = 0.3% 3, 2 (3 / 10000) = 0.03%",
        "params": {
          "amount": "The new tax amount chosen"
        }
      },
      "currentTaxAmount()": {
        "details": "Get the current tax amount."
      },
      "currentTaxShift()": {
        "details": "Get the current tax shift."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Taxable token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}